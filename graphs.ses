{load_file("nrngui.hoc")}
objectvar save_window_, rvp_
objectvar scene_vector_[9]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}
{pwman_place(0,0,0)}

//Begin PointProcessManager
{
load_file("pointman.hoc")
}
{
soma ocbox_ = new PointProcessManager(0)
}
{object_push(ocbox_)}
{
mt.select("IClamp") i = mt.selected()
ms[i] = new MechanismStandard("IClamp")
ms[i].set("del", 100, 0)
ms[i].set("dur", 5000, 0)
ms[i].set("amp", 0.25, 0)
mt.select("IClamp") i = mt.selected() maction(i)
hoc_ac_ = 0.5
sec.sec move() d1.flip_to(0)
}
{object_pop() doNotify()}
{
ocbox_ = ocbox_.v1
ocbox_.map("PointProcessManager", -2, 606, 215.1, 340.2)
}
objref ocbox_
//End PointProcessManager

{
xpanel("RunControl", 0)
v_init = -70
xvalue("Init","v_init", 1,"stdinit()", 1, 1 )
xbutton("Init & Run","stdinit () run()")
xbutton("Stop","stoprun=1")
runStopAt = 5
xvalue("Continue til","runStopAt", 1,"{continuerun(runStopAt) stoprun=1}", 1, 1 )
runStopIn = 1000
xvalue("Continue for","runStopIn", 1,"{continuerun(t + runStopIn) stoprun=1}", 1, 1 )
xbutton("Single Step","steprun()")
t = 582.55
xvalue("t","t", 2 )
tstop = 6000
xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
dt = 0.025
xvalue("dt","dt", 1,"setdt()", 0, 1 )
steps_per_ms = 40
xvalue("Points plotted/ms","steps_per_ms", 1,"setdt()", 0, 1 )
//xcheckbox("Quiet",&stdrun_quiet,"")
xcheckbox("Reduced Plot?",&reduced_plot,"")
reduction = 1
xvalue("reduction","reduction", 0,"", 0, 0 )
realtime = 18.93
xvalue("Real Time","realtime", 0,"", 0, 1 )
xpanel(-1,94)
}
{
save_window_ = new Graph(0)
save_window_.size(0,6000,-100,80)
scene_vector_[2] = save_window_
{save_window_.view(0, -100, 6000, 180, 360, 1, 300.6, 200.8)}
graphList[1].append(save_window_)
save_window_.save_name("graphList[1].")
save_window_.addexpr("soma.v", 1, 1, 0.8, 0.9, 2)
save_window_.addexpr("soma.ek", 3, 1, 0.8, 0.9, 2)
save_window_.addexpr("soma.ecl", 7, 1, 0.8, 0.9, 2)
save_window_.addexpr("soma.ena", 2, 1, 0.8, 0.9, 2)
}
{
save_window_ = new Graph(0)
save_window_.size(0,6000,4e-05,0.00043)
scene_vector_[3] = save_window_
{save_window_.view(0, 4e-05, 6000, 0.00039, 364, 675, 300.6, 200.8)}
graphList[1].append(save_window_)
save_window_.save_name("graphList[1].")
save_window_.addexpr("soma.cai", 1, 1, 0.8, 0.9, 2)
}
{
save_window_ = new Graph(0)
save_window_.size(0,6000,3.5,6.3)
scene_vector_[5] = save_window_
{save_window_.view(0, 3.5, 6000, 2.8, 775, 679, 300.6, 200.8)}
graphList[1].append(save_window_)
save_window_.save_name("graphList[1].")
save_window_.addexpr("soma.ko", 1, 1, 0.8, 0.913446, 2)
save_window_.addexpr("dendrite0.ko", 2, 1, 0.797006, 0.913446, 2)
save_window_.addexpr("dendrite1.ko", 3, 1, 0.8, 0.9, 2)
save_window_.addexpr("dendrite2.ko", 4, 1, 0.8, 0.9, 2)
save_window_.addexpr("dendrite3.ko", 5, 1, 0.794012, 0.657968, 2)
save_window_.addexpr("dendrite4.ko", 7, 1, 0.791018, 0.66245, 2)
}
{
save_window_ = new Graph(0)
save_window_.size(0,6000,-93,-79)
scene_vector_[6] = save_window_
{save_window_.view(0, -93, 6000, 14, 781, -2, 300.6, 200.8)}
graphList[1].append(save_window_)
save_window_.save_name("graphList[1].")
save_window_.addexpr("psoma.v", 1, 1, 0.794012, 0.832769, 2)
save_window_.addexpr("psoma.ek", 3, 1, 0.8, 0.9, 2)
}
{
save_window_ = new Graph(0)
save_window_.size(0,6000,-0.1,2.3)
scene_vector_[7] = save_window_
{save_window_.view(0, -0.1, 6000, 2.4, 780, 339, 300.6, 200.8)}
graphList[1].append(save_window_)
save_window_.save_name("graphList[1].")
save_window_.addexpr("soma.ik", 3, 1, 0.8, 0.9, 2)
save_window_.addexpr("psoma.ik", 1, 1, 0.8, 0.9, 2)
}
{
save_window_ = new Graph(0)
save_window_.size(0,6000,-7,2)
scene_vector_[8] = save_window_
{save_window_.view(0, -7, 6000, 9, 364, 339, 300.6, 200.8)}
graphList[1].append(save_window_)
save_window_.save_name("graphList[1].")
save_window_.addexpr("soma.ina_nachan", 2, 1, 0.8, 0.9, 2)
save_window_.addexpr("soma.ik_kdr", 3, 1, 0.8, 0.9, 2)
save_window_.addexpr("soma.ik_ka", 4, 1, 0.8, 0.9, 2)
save_window_.addexpr("soma.ik_sk", 1, 1, 0.8, 0.9, 2)
save_window_.addexpr("soma.ica_cal", 7, 1, 0.8, 0.9, 2)
save_window_.addexpr("soma.ica_cat", 5, 1, 0.8, 0.9, 2)
}
objectvar scene_vector_[1]
{doNotify()}
